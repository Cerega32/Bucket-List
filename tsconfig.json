{
	"compilerOptions": {
		/* Language and Environment */
		"target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
		"lib": [
			"DOM",
			"es2019"
		] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
		"jsx": "react-jsx" /* Specify what JSX code is generated. */,
		"experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,

		/* Modules */
		"module": "ES6" /* Specify what module code is generated. */,
		"moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
		"baseUrl": "./" /* Specify the base directory to resolve non-relative module names. */,
		"paths": {
			"@/*": ["./src/*"]
		} /* Specify a set of entries that re-map imports to additional lookup locations. */,
		"typeRoots": [
			"./src/types.d.ts",
			"./node_modules/@types/"
		] /* Specify multiple folders that act like './node_modules/@types'. */,
		"resolveJsonModule": true /* Enable importing .json files. */,

		/* JavaScript Support */
		"allowJs": false /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,

		/* Emit */
		"sourceMap": true /* Create source map files for emitted JavaScript files. */,
		"noEmit": true /* Disable emitting files from a compilation. */,

		/* Interop Constraints */
		"isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

		/* Type Checking */
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
		"strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
		"strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
		"strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */,
		"strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
		"noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
		"useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any'. */,
		"alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
		"noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
		"noPropertyAccessFromIndexSignature": true /* Enforces using indexed accessors for keys declared using an indexed type. */,

		/* Completeness */
		"skipLibCheck": true /* Skip type checking all .d.ts files. */
	},
	"include": ["src/", "**/*.tsx", "src/assets/svg/custom.d.ts"],
	"exclude": ["node_modules"]
}
